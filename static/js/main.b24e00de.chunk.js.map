{"version":3,"sources":["components/SingleTodo.jsx","components/Todo.jsx","App.jsx","index.js"],"names":["SingleTodo","props","className","user","onClick","id","updatedUser","userArray","filter","setUserArray","console","log","handleDelete","Todo","React","useState","setUser","alertBox","document","getElementById","handlePick","length","randomUser","Math","floor","random","spanText","style","display","innerHTML","String","name","randomUserArray","alert","Fragment","onSubmit","e","preventDefault","newUser","Date","getTime","concat","type","onChange","target","value","map","App","root","ReactDOM","render"],"mappings":"0MAEe,SAASA,EAAaC,GAOjC,OACI,sBAAKC,UAAY,aAAjB,UACI,4BAAID,EAAME,OACV,wBACID,UAAY,MACZE,QAAY,kBAXxB,SAAwBC,GACpB,IAAMC,EAAc,YAAIL,EAAMM,WAAWC,QAAQ,SAAEL,GAAF,OAAYA,EAAKE,KAAOJ,EAAMI,MAC/EJ,EAAMQ,aAAaH,GACnBI,QAAQC,IAAIL,GAQeM,CAAcX,EAAMI,KAF3C,uBCTG,SAASQ,IACpB,MAAwBC,IAAMC,SAAS,IAAvC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAAkCF,IAAMC,SAAS,IAAjD,mBAAOR,EAAP,KAAkBE,EAAlB,KACIQ,EAAWC,SAASC,eAAe,eA8BvC,SAASC,IACJb,EAAUc,QAAU,EA5BzB,WACI,IAAIC,EAAa,YAAIf,GAAWgB,KAAKC,MAAMD,KAAKE,SAAW,YAAIlB,GAAWc,SACtEK,EAAWR,SAASC,eAAe,UACvCF,EAASU,MAAMC,QAAU,OACzBF,EAASG,UAAYC,OAAOR,EAAWS,MAwBbC,GAAoBC,MAAM,iCAGxD,OACI,eAAC,IAAMC,SAAP,WACI,sBAAKhC,UAAY,eAAjB,UACI,uBAAMiC,SAtBlB,SAAwBC,GAEpB,GADAA,EAAEC,iBACW,KAATlC,EAAa,CACb,IAAMmC,EAAU,CACZP,KAAM5B,EACNE,IAAI,IAAIkC,MAAOC,WAEnB/B,EAAa,YAAIF,GAAWkC,OAAOH,IACnCtB,EAAQ,SAERA,EAAQ,IACRiB,MAAM,8BAW8B/B,UAAY,YAA5C,UACI,uBACIwC,KAAK,OACLC,SAAa,SAAEP,GACXpB,EAAQoB,EAAEQ,OAAOC,QAErBA,MAAS1C,EACTD,UAAY,UAEhB,wBAAQA,UAAY,MAApB,iBACA,wBACIwC,KAAO,SACPxC,UAAY,kBACZE,QAAY,kBAAOgB,KAHvB,qBAMJ,qBAAKlB,UAAY,cAAjB,SAEQK,EAAUuC,KAAM,SAAE3C,GAAF,OACZ,cAACH,EAAD,CAAYG,KAAQA,EAAK4B,KAAsB1B,GAAMF,EAAKE,GAAIE,UAAaA,EAAWE,aAAgBA,GAAhEN,EAAKE,YAK3D,qBAAKH,UAAU,6BAA6BG,GAAG,cAA/C,SACI,sBAAKH,UAAU,cAAf,UACI,yCAAW,sBAAMG,GAAK,cACtB,wBACIqC,KAAO,SACPxC,UAAY,MACZE,QAAY,WAxD5Ba,EAASU,MAAMC,QAAU,OACzBnB,EAAa,KAoDD,2B,MClEL,SAASsC,IACpB,OACI,qBAAK7C,UAAY,cAAjB,SACI,cAACW,EAAD,MCHZ,IAAMmC,EAAO9B,SAASC,eAAe,QAErC8B,IAASC,OAAO,cAAC,EAAD,IAAQF,K","file":"static/js/main.b24e00de.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function SingleTodo ( props ) {\r\n    function handleDelete ( id ) {\r\n        const updatedUser = [...props.userArray].filter( ( user ) => user.id !== props.id)\r\n        props.setUserArray(updatedUser);\r\n        console.log(updatedUser)\r\n    } \r\n\r\n    return (\r\n        <div className = \"singleTodo\">\r\n            <p>{props.user}</p>\r\n            <button \r\n                className = \"btn\"\r\n                onClick = { ( ) => handleDelete( props.id )}\r\n            >delete</button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport SingleTodo from './SingleTodo.jsx'\r\n\r\nexport default function Todo() {\r\n    const [user, setUser] = React.useState(\"\");\r\n    const [userArray, setUserArray] = React.useState([]);\r\n    let alertBox = document.getElementById(\"todo-winner\");\r\n        \r\n\r\n    function randomUserArray ( ) {\r\n        let randomUser = [...userArray][Math.floor(Math.random() * [...userArray].length)]\r\n        let spanText = document.getElementById(\"todo-p\");\r\n        alertBox.style.display = 'flex';\r\n        spanText.innerHTML = String(randomUser.name);\r\n    }\r\n\r\n    function handleBack ( ) {\r\n        alertBox.style.display = 'none';\r\n        setUserArray([]);\r\n    }\r\n    \r\n    function handleSubmit ( e ) {\r\n        e.preventDefault();\r\n        if (user !== \"\") {\r\n            const newUser = {\r\n                name: user,\r\n                id: new Date().getTime()\r\n            }\r\n            setUserArray([...userArray].concat(newUser));\r\n            setUser(\"\");\r\n        } else {\r\n            setUser(\"\");\r\n            alert(\"Please enter a valid name\");\r\n        }\r\n    }\r\n\r\n    function handlePick( ) {\r\n        (userArray.length >= 2) ? randomUserArray() : alert(\"Please enter at least 2 names\")  \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className = \"todo-wrapper\">\r\n                <form onSubmit = {handleSubmit} className = \"todo-form\">\r\n                    <input \r\n                        type=\"text\"\r\n                        onChange = { ( e ) => {\r\n                            setUser(e.target.value) \r\n                        }}\r\n                        value = {user}\r\n                        className = \"input\" \r\n                    />\r\n                    <button className = \"btn\">ADD</button>\r\n                    <button\r\n                        type = \"button\"\r\n                        className = \"btn btn-rulette\"\r\n                        onClick = { ( ) => handlePick( ) }\r\n                    >PICK</button>\r\n                </form>\r\n                <div className = \"userWrapper\">\r\n                    {\r\n                        userArray.map(  ( user ) => (\r\n                            <SingleTodo user = {user.name} key = {user.id} id = {user.id} userArray = {userArray} setUserArray = {setUserArray}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"todo-winner-wrapper d-none\" id=\"todo-winner\">\r\n                <div className=\"todo-winner\">\r\n                    <p>Winner: <span id = \"todo-p\"></span></p>\r\n                    <button \r\n                        type = \"button\"\r\n                        className = \"btn\"\r\n                        onClick = { ( ) => {handleBack( )} }\r\n                    >Retry</button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport Todo from './components/Todo.jsx'\r\nimport './style/App.css'\r\n\r\nexport default function App ( ) {\r\n    return (\r\n        <div className = \"app-wrapper\">\r\n            <Todo />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.jsx' \r\n\r\nconst root = document.getElementById('root');\r\n\r\nReactDOM.render(<App />,root)"],"sourceRoot":""}